package me.moomoo.anarchyexploitfixes.commands.aef.subcommands;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.commands.SubCommand;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandSender;

import java.util.SortedMap;

public class ConfigSubCmd extends SubCommand {

    @Override
    public String getName() {
        return "config";
    }
    @Override
    public String getDescription() {
        return "See what's enabled. &fWarning: spammy, intended for console.";
    }
    @Override
    public String getSyntax() {
        return "/aef config";
    }

    @Override
    public void perform(CommandSender sender, String[] args) {
        if (sender.hasPermission("anarchyexploitfixes.cmd.config")) {
            AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
            int amountOfModules = plugin.enabledModules.size();
            int amountOfEnabledModules = 0;
            int amountOfDisabledModules = 0;

            for (SortedMap.Entry<String, Boolean> module : plugin.enabledModules.entrySet()) {
                if (module.getValue()) {
                    amountOfEnabledModules++;
                } else {
                    amountOfDisabledModules++;
                }
            }

            sender.sendMessage(ChatColor.GOLD + "Enabled: ");
            for (SortedMap.Entry<String, Boolean> module : plugin.enabledModules.entrySet()) {
                if (module.getValue()) sender.sendMessage(ChatColor.GREEN + module.getKey());
            }
            sender.sendMessage(ChatColor.GOLD + "Disabled: ");
            for (SortedMap.Entry<String, Boolean> module : plugin.enabledModules.entrySet()) {
                if (!module.getValue()) sender.sendMessage(ChatColor.RED + module.getKey());
            }

            sender.sendMessage(ChatColor.GOLD + "Enabled Modules: " + amountOfEnabledModules + "/" + amountOfModules);
            sender.sendMessage(ChatColor.GOLD + "Disabled Modules: " + amountOfDisabledModules + "/" + amountOfModules);
        } else {
            sender.sendMessage(ChatColor.translateAlternateColorCodes('&', AnarchyExploitFixes.getLang(sender).noPermission));
        }
    }
}
