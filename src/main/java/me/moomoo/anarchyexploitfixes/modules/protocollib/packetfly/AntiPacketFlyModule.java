package me.moomoo.anarchyexploitfixes.modules.protocollib.packetfly;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.protocollib.ProtocolLibModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;

import java.util.logging.Level;

public class AntiPacketFlyModule implements ProtocolLibModule {

    private final Config config;
    private final boolean logIsEnabled, shouldKickPlayer;
    private final int maxTeleportPacketsPer10s;

    public AntiPacketFlyModule() {
        this.config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.packetfly-patch.enable", "Patches Futureclient / Rusherhack packet fly exploit.");
        this.logIsEnabled = config.getBoolean("patches.packetfly-patch.log", true);
        this.maxTeleportPacketsPer10s = config.getInt("patches.packetfly-patch.max-teleport-packets-per-10s", 25);
        this.shouldKickPlayer = config.getBoolean("patches.packetfly-patch.kick-player-if-packetflying", false);
    }

    @Override
    public String name() {
        return "packetfly-patch";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        new PacketFlyTeleportPacketListener(AnarchyExploitFixes.getInstance(), maxTeleportPacketsPer10s, shouldKickPlayer, logIsEnabled, name()).register();
    }

    @Override
    public boolean shouldEnable() {
        if (config.getBoolean("patches.packetfly-patch.enable", true)) {
            if (config.protocolLib_IsDisabled) {
                LogUtils.moduleLog(Level.WARNING, name(), "Not patching exploit because you disabled ProtocolLib in config!");
                return false;
            }
            if (!AnarchyExploitFixes.isProtocolLibInstalled()) {
                LogUtils.moduleLog(Level.SEVERE, name(), "Unable to patch exploit because ProtocolLib is not installed!");
                return false;
            }
            return true;
        }
        return false;
    }
}
