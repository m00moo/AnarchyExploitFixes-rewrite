package me.moomoo.anarchyexploitfixes.modules.protocollib.craftrecipe;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.protocollib.ProtocolLibModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;

import java.util.logging.Level;

public class CraftRecipeCooldownModule implements ProtocolLibModule {

    private final Config config;
    private final long craftingRecipeDelayInMillis;

    public CraftRecipeCooldownModule() {
        this.config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.prevent-crafting-recipe-lag-exploit.enable", "Prevent lagging the server by spamming the crafting recipe book.");
        this.craftingRecipeDelayInMillis = config.getInt("patches.prevent-crafting-recipe-lag-exploit.crafting-recipe-delay-in-ticks", 5, "How many ticks a player needs to wait to be able to use the crafting recipe book again") * 50L;
    }

    @Override
    public String name() {
        return "prevent-crafting-recipe-lag-exploit";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        new AutoRecipePacketListener(AnarchyExploitFixes.getInstance(), craftingRecipeDelayInMillis).register();
    }

    @Override
    public boolean shouldEnable() {
        if (config.getBoolean("patches.prevent-crafting-recipe-lag-exploit.enable", true)) {
            if (config.protocolLib_IsDisabled) {
                LogUtils.moduleLog(Level.WARNING, name(), "Not patching exploit because you disabled ProtocolLib in config!");
                return false;
            }
            if (!AnarchyExploitFixes.isProtocolLibInstalled()) {
                LogUtils.moduleLog(Level.SEVERE, name(), "Unable to patch exploit because ProtocolLib is not installed!");
                return false;
            }
            return true;
        }
        return false;
    }
}
