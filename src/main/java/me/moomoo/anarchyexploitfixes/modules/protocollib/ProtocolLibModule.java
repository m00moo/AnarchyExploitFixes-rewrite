package me.moomoo.anarchyexploitfixes.modules.protocollib;

import com.comphenix.protocol.ProtocolLibrary;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.protocollib.boatfly.AntiBoatFlyModule;
import me.moomoo.anarchyexploitfixes.modules.protocollib.craftrecipe.CraftRecipeCooldownModule;
import me.moomoo.anarchyexploitfixes.modules.protocollib.nocom.NoComModule;
import me.moomoo.anarchyexploitfixes.modules.protocollib.packetfly.AntiPacketFlyModule;

import java.util.HashSet;

public interface ProtocolLibModule {

    String name();
    String category();
    void enable();
    boolean shouldEnable();

    HashSet<ProtocolLibModule> modules = new HashSet<>();

    static void reloadModules() {
        modules.clear();
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        boolean protocolLibInstalled = AnarchyExploitFixes.isProtocolLibInstalled();
        if (protocolLibInstalled) ProtocolLibrary.getProtocolManager().removePacketListeners(plugin);

        modules.add(new NoComModule());
        modules.add(new AntiBoatFlyModule());
        modules.add(new AntiPacketFlyModule());
        modules.add(new CraftRecipeCooldownModule());

        for (ProtocolLibModule module : modules) {
            if (module.shouldEnable()) module.enable();
            plugin.enabledModules.put("<" + module.category() + "> " + module.name(), module.shouldEnable());
        }

        boolean protocolLibDisabled = AnarchyExploitFixes.getConfiguration().protocolLib_IsDisabled;
        if (protocolLibDisabled || !protocolLibInstalled) modules.clear(); // save memory

        if (!protocolLibDisabled && !protocolLibInstalled) {
            AnarchyExploitFixes.getLog().severe("Could not find ProtocolLib. Many gamebreaking exploits cannot be patched without it.");
            AnarchyExploitFixes.getLog().severe("Download at: https://www.spigotmc.org/resources/protocollib.1997/");
        }
    }
}
