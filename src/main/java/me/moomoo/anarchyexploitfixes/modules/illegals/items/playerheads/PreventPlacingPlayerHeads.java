package me.moomoo.anarchyexploitfixes.modules.illegals.items.playerheads;

import com.cryptomorin.xseries.XMaterial;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Material;
import org.bukkit.SkullType;
import org.bukkit.block.Block;
import org.bukkit.block.Skull;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;

public class PreventPlacingPlayerHeads implements AnarchyExploitFixesModule, Listener {

    private final Material player_head;

    public PreventPlacingPlayerHeads() {
        shouldEnable();
        this.player_head = XMaterial.PLAYER_HEAD.parseMaterial();
    }

    @Override
    public String name() {
        return "ban-player-heads.prevent-placing";
    }

    @Override
    public String category() {
        return "illegals";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("illegals.ban-player-heads.prevent-placing", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        Block block = event.getBlock();
        if (block.getType().equals(player_head)) {
            Skull skull = (Skull) block.getState();
            if (skull.hasOwner() || skull.getSkullType().equals(SkullType.PLAYER)) {
                event.setCancelled(true);
            }
        }
    }
}
