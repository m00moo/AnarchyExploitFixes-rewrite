package me.moomoo.anarchyexploitfixes.modules.preventions.withers;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.entity.WitherSkull;
import org.bukkit.event.Listener;

public class RemoveSkullsAfterXTicks implements AnarchyExploitFixesModule, Listener {

    private final long maxAgeInTicks;

    public RemoveSkullsAfterXTicks() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("preventions.withers.remove-flying-wither-skulls.if-lived-longer-than-x-ticks.enable", "Remove wither skulls that have been flying for too long to prevent them from causing lag.");
        this.maxAgeInTicks = config.getInt("preventions.withers.remove-flying-wither-skulls.if-lived-longer-than-x-ticks.max-age-in-ticks", 200, "200 Ticks = 10 Seconds");
    }

    @Override
    public String name() {
        return "remove-flying-wither-skulls.if-lived-longer-than-x-ticks";
    }

    @Override
    public String category() {
        return "preventions";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().scheduleSyncRepeatingTask(plugin, removeOldWitherSkulls, 20L, 20L);
    }

    @Override
    public boolean shouldEnable() {
        Config config = AnarchyExploitFixes.getConfiguration();
        return (
                config.getBoolean("preventions.withers.remove-flying-wither-skulls.if-lived-longer-than-x-ticks.enable", true)
                && !config.getBoolean("preventions.withers.remove-flying-wither-skulls.remove-all-flying-skulls", false)
        );
    }

    private final Runnable removeOldWitherSkulls = new Runnable() {
        @Override
        public void run() {
            for (World world : Bukkit.getWorlds()) {
                for (Entity entity : world.getEntities()) {
                    if (entity instanceof WitherSkull) {
                        if (entity.getTicksLived() > maxAgeInTicks) {
                            entity.remove();
                        }
                    }
                }
            }
        }
    };
}
