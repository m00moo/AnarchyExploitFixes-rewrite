package me.moomoo.anarchyexploitfixes.modules.options1b1t;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import java.util.Collections;
import java.util.HashSet;
import java.util.List;

import static me.moomoo.anarchyexploitfixes.utils.CommandUtils.getCommandLabel;

public class HurtCommands implements AnarchyExploitFixesModule, Listener {

    private final HashSet<String> hurtCommands = new HashSet<>();
    private final long damageAmount;

    public HurtCommands() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.damageAmount = config.getInt("1b1t-options.make-specific-commands-hurt-you.damage-amount", 10);
        List<String> configuredHurtCommands = config.getList("1b1t-options.make-specific-commands-hurt-you.hurt-commands", Collections.singletonList("tpa"));
        for (String configuredHurtCommand : configuredHurtCommands) {
            if (configuredHurtCommand.startsWith("/")) { // Old configs had entries starting with "/"
                hurtCommands.add(configuredHurtCommand.substring(1).toLowerCase());
            } else {
                hurtCommands.add(configuredHurtCommand.toLowerCase());
            }
        }
    }

    @Override
    public String name() {
        return "make-specific-commands-hurt-you";
    }

    @Override
    public String category() {
        return "1b1t-options";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("1b1t-options.make-specific-commands-hurt-you.enable", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onCommandPreProcess(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        if (hurtCommands.contains(getCommandLabel(event.getMessage()).toLowerCase())) {
            event.setCancelled(true);
            player.damage(damageAmount);
        }
    }
}
