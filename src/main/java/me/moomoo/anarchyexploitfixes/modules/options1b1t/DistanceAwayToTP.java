package me.moomoo.anarchyexploitfixes.modules.options1b1t;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import java.awt.*;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

import static me.moomoo.anarchyexploitfixes.utils.CommandUtils.getCommandLabel;

public class DistanceAwayToTP implements AnarchyExploitFixesModule, Listener {

    private final int distance;
    private final HashSet<String> teleportCommands = new HashSet<>();
    private final HashSet<String> excludedWorlds = new HashSet<>();

    public DistanceAwayToTP() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.distance = config.getInt("1b1t-options.distance-away-to-teleport.distance-in-blocks", 5000);
        List<String> configuredTPCommands = config.getList("1b1t-options.distance-away-to-teleport.teleport-commands", Arrays.asList(
                "tpa", "tpahere", "call", "ecall", "etpa", "tpask", "etpask"
        ));
        for (String configuredTPCommand : configuredTPCommands) {
            if (configuredTPCommand.startsWith("/")) { // Old configs had entries starting with "/"
                teleportCommands.add(configuredTPCommand.substring(1).toLowerCase());
            } else {
                teleportCommands.add(configuredTPCommand.toLowerCase());
            }
        }
        List<String> configuredExcludedWorlds = config.getList("1b1t-options.distance-away-to-teleport.excluded-worlds", Arrays.asList(
                "world_the_end", "exampleworld2"
        ));
        excludedWorlds.addAll(configuredExcludedWorlds);
    }

    @Override
    public String name() {
        return "distance-away-to-teleport";
    }

    @Override
    public String category() {
        return "1b1t-options";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("1b1t-options.distance-away-to-teleport.enable", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onCommandPreProcess(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;
        if (excludedWorlds.contains(player.getWorld().getName())) return;

        if (teleportCommands.contains(getCommandLabel(event.getMessage()).toLowerCase())) {
            if (new Point(player.getLocation().getBlockX(), player.getLocation().getBlockZ()).distance(new Point(0, 0)) <= distance) {
                event.setCancelled(true);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        AnarchyExploitFixes.getLang(player.getLocale()).youNeedToBeXBlocksAwayToTP
                                .replace("%blocks%", String.valueOf(distance))
                ));
            }
        }
    }
}
