package me.moomoo.anarchyexploitfixes.modules.patches;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.ChatColor;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerPreLoginEvent;
import org.geysermc.floodgate.api.FloodgateApi;

import java.util.logging.Level;

import static me.moomoo.anarchyexploitfixes.utils.LogUtils.moduleLog;

public class InvalidUserNames implements AnarchyExploitFixesModule, Listener {

    private final boolean logIsEnabled;
    private final boolean exemptFloodgate;
    private FloodgateApi floodgateApi;

    public InvalidUserNames() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.prevent-invalid-username-joins.enable", "Prevent usernames with characters that are non letters, numbers, or underscores, or too long/too short.");
        this.logIsEnabled = config.getBoolean("patches.prevent-invalid-username-joins.log", true);
        this.exemptFloodgate = config.getBoolean("patches.prevent-invalid-username-joins.exempt-floodgate-players", false, "Only enable if you're using floodgate and are experiencing problems.");
        if (AnarchyExploitFixes.getInstance().getServer().getPluginManager().isPluginEnabled("floodgate")) {
            floodgateApi = FloodgateApi.getInstance();
        }
    }

    @Override
    public String name() {
        return "prevent-invalid-username-joins";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-invalid-username-joins.enable", false);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onLogin(AsyncPlayerPreLoginEvent event) {
        String joiningPlayerName = event.getName();
        if (exemptFloodgate) {
            if (floodgateApi != null && floodgateApi.isFloodgateId(event.getUniqueId())) return;
        }

        if (
                !joiningPlayerName.matches("[A-Za-z0-9_]+")
                || joiningPlayerName.length() < 1
                || joiningPlayerName.length() > 16
        ) {
            event.disallow(AsyncPlayerPreLoginEvent.Result.KICK_OTHER, ChatColor.RED + "Invalid Username");
            if (logIsEnabled) moduleLog(Level.WARNING, name(),"Not allowing Player '"+joiningPlayerName+"' to join: Invalid Username.");
        }
    }
}
