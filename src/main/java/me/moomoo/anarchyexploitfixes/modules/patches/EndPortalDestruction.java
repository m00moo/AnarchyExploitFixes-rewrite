package me.moomoo.anarchyexploitfixes.modules.patches;

import com.cryptomorin.xseries.XMaterial;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.player.PlayerBucketEmptyEvent;

import java.util.logging.Level;

public class EndPortalDestruction implements AnarchyExploitFixesModule,Listener {

    private final boolean logIsEnabled;
    private final Material water_bucket, lava_bucket, end_portal, end_portal_frame, bedrock;

    public EndPortalDestruction() {
        shouldEnable();
        this.logIsEnabled = AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-destroying-end-portals.log", true);
        this.water_bucket = XMaterial.WATER_BUCKET.parseMaterial();
        this.lava_bucket = XMaterial.LAVA_BUCKET.parseMaterial();
        this.end_portal = XMaterial.END_PORTAL.parseMaterial();
        this.end_portal_frame = XMaterial.END_PORTAL_FRAME.parseMaterial();
        this.bedrock = XMaterial.BEDROCK.parseMaterial();
    }

    @Override
    public String name() {
        return "prevent-destroying-end-portals";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-destroying-end-portals.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onBlockDispense(BlockDispenseEvent event) {
        Material dispensedMaterial = event.getItem().getType();
        if (
                dispensedMaterial.equals(water_bucket)
                || dispensedMaterial.equals(lava_bucket)
        ) {
            if (
                    event.getBlock().getRelative(BlockFace.DOWN).getType().equals(end_portal)
                    || event.getBlock().getRelative(BlockFace.UP).getType().equals(end_portal)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented a dispenser from destroying an end portal!");
            }
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerBucketEvent(PlayerBucketEmptyEvent event) {
        Block clickedBlock = event.getBlockClicked();
        BlockFace blockFace = event.getBlockFace();

        if (
                blockFace.equals(BlockFace.NORTH)
                || blockFace.equals(BlockFace.EAST)
                || blockFace.equals(BlockFace.SOUTH)
                || blockFace.equals(BlockFace.WEST)
        ) {
            if (
                    clickedBlock.getType().equals(bedrock)
                    && clickedBlock.getWorld().getEnvironment().equals(World.Environment.THE_END)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
                return;
            }

            if (clickedBlock.getType().equals(end_portal_frame)) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
                return;
            }
        }

        if (
                blockFace.equals(BlockFace.UP)
                || blockFace.equals(BlockFace.DOWN)
        ) {
            if (
                    clickedBlock.getRelative(BlockFace.UP).getType().equals(end_portal)
                    || clickedBlock.getRelative(BlockFace.DOWN).getType().equals(end_portal)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
            }
        }
    }
}
