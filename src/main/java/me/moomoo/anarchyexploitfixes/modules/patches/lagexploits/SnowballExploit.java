package me.moomoo.anarchyexploitfixes.modules.patches.lagexploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.entity.*;

public class SnowballExploit implements AnarchyExploitFixesModule, Runnable {

    private final int max_alive_time;
    private final long check_period_in_ticks;

    public SnowballExploit() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.prevent-snowball-exploit.enable",  "Patches a lag exploit.");
        this.max_alive_time = config.getInt("patches.prevent-snowball-exploit.projectiles-max-alive-time-in-ticks", 300, "(20 ticks = 1 second) Will not touch Ender Pearls");
        this.check_period_in_ticks = config.getInt("patches.prevent-snowball-exploit.check-period-in-seconds", 20, "How frequently we should check for all projectile's alive time") * 20L;
    }

    @Override
    public String name() {
        return "prevent-snowball-exploit";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().scheduleSyncRepeatingTask(plugin, this, 20L, check_period_in_ticks);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-snowball-exploit.enable", false);
    }

    @Override
    public void run() {
        for (World world : Bukkit.getWorlds()) {
            for (Entity entity : world.getEntities()) {
                if (entity instanceof Projectile) {
                    if (!(entity instanceof EnderPearl) && !(entity instanceof WitherSkull)) { // dont delete ender pearls ins stasis chambers and ignore wither skulls as they have their separate config
                        if (entity.getTicksLived() > max_alive_time) {
                            entity.remove();
                        }
                    }
                }
            }
        }
    }
}
