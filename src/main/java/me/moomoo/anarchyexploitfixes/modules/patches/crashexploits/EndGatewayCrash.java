package me.moomoo.anarchyexploitfixes.modules.patches.crashexploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityTeleportEvent;

import java.util.logging.Level;

public class EndGatewayCrash implements AnarchyExploitFixesModule, Listener {

    private final boolean logIsEnabled;

    public EndGatewayCrash() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.crash-exploits.prevent-end-gateway-crash.enable", "Prevents a crash exploit involving boats and end gateways: https://www.youtube.com/watch?v=c5nVBQeYo-I");
        this.logIsEnabled = config.getBoolean("patches.crash-exploits.prevent-end-gateway-crash.log", true);
    }

    @Override
    public String name() {
        return "prevent-end-gateway-crash";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.crash-exploits.prevent-end-gateway-crash.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onEntityTeleportEvent(EntityTeleportEvent event) {
        Entity teleportedEntity = event.getEntity();
        if (
                teleportedEntity.getWorld().getEnvironment().equals(World.Environment.THE_END)
                && !teleportedEntity.isEmpty()
        ) {
            event.setCancelled(true);
            if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),
                    "Prevented "+teleportedEntity.getName()+" from going through Gateway at: "+teleportedEntity.getLocation()
            );
        }
    }
}
